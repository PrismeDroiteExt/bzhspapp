services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=${AUTH_DB_HOST}
      - DB_USER=${AUTH_DB_USER}
      - DB_PASSWORD=${AUTH_DB_PASSWORD}
      - DB_NAME=${AUTH_DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_SSLMODE=${DB_SSLMODE}
      - DB_TIMEZONE=${TIMEZONE}
      - GIN_MODE=${GIN_MODE}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db-auth:
        condition: service_healthy

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=${PRODUCT_DB_HOST}
      - DB_USER=${PRODUCT_DB_USER}
      - DB_PASSWORD=${PRODUCT_DB_PASSWORD}
      - DB_NAME=${PRODUCT_DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_SSLMODE=${DB_SSLMODE}
      - DB_TIMEZONE=${TIMEZONE}
      - GIN_MODE=${GIN_MODE}
    depends_on:
      - db-product

  db-auth:
    image: postgres:17
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-product:
    image: postgres:17
    environment:
      POSTGRES_USER: ${PRODUCT_DB_USER}
      POSTGRES_PASSWORD: ${PRODUCT_DB_PASSWORD}
      POSTGRES_DB: ${PRODUCT_DB_NAME}
    volumes:
      - product-db-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

volumes:
  auth-db-data:
  product-db-data: